---
title: "Heirs Property Rates By County"
format: html
editor: visual
---

# Packages

```{r}
# library(tidyverse)
library(readxl)
library(writexl)
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(zoo)
```

## Import Data

```{r}
chaves_parcels <- dd_raw <- read_csv("/Users/timfarkas/repos/rural-estate-law/parcels/Chaves County Parcel Data All.csv")  
```


## Set Up Regex

To Handle:
1. last, First AKA First2 Middle
2. Jr, Sr, II, III
3. LLC, INC, LTD
4. New Mexico, State Of
5. Dexter, Town Of 
5. Last, Husband & Wife 
6. Last, First (Nickname) Middle
7. TRUST, TRUSTEES
8. Last First (no comma)
```{r}
suffixes <- c("JR", "SR", "II", "III")
# capture any white space followed by any suffix in the list at the end of the string
suffix_pattern <- paste0("\\s(", paste(suffixes, collapse = "|"), ")$")
# all the business patterns
biz_keys <- c(
  "LLC", 
  "LIMITED", 
  "LIABILITY", 
  "CO",
  "COMPANY", 
  "CORPORATION", 
  "CORP",
  "INC", 
  "INCORPORATED", 
  "LTD", 
  "CHURCH", 
  "TRUST", 
  "TRUSTEE",
  "TRUSTEES", 
  "IGLESIA", 
  "TEMPLE", 
  "ASSOC", 
  "ASSOCIATION", 
  "FOUNDATION", 
  "BOARD", 
  "LP",
  "DAIRY", 
  "RANCH", 
  "PARTNERSHIP", 
  "BANK", 
  "PARTNERS", 
  "FARM", 
  "FARMS", 
  "PROPERTIES", 
  "PROPERTY", 
  "CITY", 
  "COUNTY", 
  "STATE", 
  "STATES", 
  "TOWN",
  "LLLP",
  "DEPT",
  "DEPARTMENT",
  "PLC",
  "ENTERPRISES",
  "ENTERPRISE",
  "GROUP",
  "COMPANY",
  "MORTGAGE",
  "CREDIT",
  "FINANCIAL",
  "LENDING",
  "SERVICING",
  "FUND",
  "HOUSING",
  "AUTHORITY",
  "AGENCY",
  "SCHOOL",
  "UNIVERSITY",
  "COLLEGE",
  "INSTITUTE",
  "CLUB",
  "UNION",
  "SOCIETY",
  "SERVICE"
  ) 

# turn into regex for data manipulation
biz_patterns <- paste0(
  "\\b(", 
  paste(biz_keys, collapse = "\\.?|"), # adding a "." to end of everything probably just fine
  ")\\b"
)
```


## Transform Data 
```{r}
dd <- dd_raw %>%
  drop_na(CLASSCD1_DESC) %>% # filter out non-real property
  separate_rows(NAME, sep = ";") %>% # create new rows split by semicolon
  filter(
    !str_detect(NAME, biz_patterns), # remove business names
    str_detect(NAME, ","), # remove rows without commas
    ) %>%
  mutate(ORIG_NAME = NAME) %>% # keep original name for reference
  separate_wider_delim( # split last and first names into columns by comma
    NAME, delim = ",", 
    names = c("LAST", "FIRST"), 
    too_many = "drop")  %>% # if there are more than two commas, drop the row entirely
  separate_rows(FIRST, sep = "&") %>%  # split rows by ampersand
  mutate(
    across(FIRST, ~str_trim(.x)), # trim whitespace
    # get everything up to suffix 
    first_no_suffix = str_extract(FIRST, paste0("^.*(?=", suffix_pattern, ")")),  
    # get just the suffix
    SUFFIX = str_extract(FIRST, suffix_pattern), # just the suffix
    # replace the first name with suffix-deletec name if suffix exists
    across(FIRST, ~ifelse(is.na(first_no_suffix), .x, first_no_suffix))
    ) 
```