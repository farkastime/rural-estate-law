
# Prerequisites
```{r}
#| label: load libraries
library(tidyverse)
library(haven)
library(janitor)
```
# Basic Data Manipulation

```{r}
#| label: load the Cross-Wave Tracker File 
trk <- read_sas('data/hrs/xwave-tracker.sas7bdat') %>%
    select(HHID, PN, GENDER, HISP = HISPANIC, RACE, wgt20r=SWGTR, age=RAGE) %>%
    clean_names("all_caps") %>%
    filter(
        GENDER %in% 1:2, 
        HISP %in% 1:5, 
        RACE %in% 1:7, 
        WGT20R > 0, 
        AGE != 999 # filter out individuals not core sampled in 2020
    ) %>%
    mutate(
        across(GENDER, ~recode(.x, '1' = 'M', '2' = 'F')), 
        across(HISP, ~recode(.x, '1' = 'Y', '2' = 'Y', '3' = 'Y', '5' = 'N')), 
        across(RACE, ~recode(.x, '1' = 'White', '2' = 'Black', '7' = 'Other')), 
        across(c(GENDER, HISP, RACE), as_factor), 
        across(c(WGT20R, AGE), as.integer)
    ) 
```
```{r}
#| label: load the Wills and Life Insurance Data
wil <- read_sas('data/hrs/core-2020/h20t_r.sas7bdat') %>%
    select(HHID, RSUBHH, PN, will_type=RT001) %>%
    clean_names("all_caps") %>%
    filter(WILL_TYPE %in% 1:5) %>%
    mutate(WILL_IND=ifelse(WILL_TYPE %in% 1:3, 'Y', 'N')) %>%
    mutate(across(WILL_IND, ~fct_relevel(as_factor(.x), "N", "Y"))) %>%
    drop_na()
```
```{r}
#| label: load Cross-Wave Census Region/Division and Mobility data
rur <- read_sas('data/hrs/xwave-mobility.sas7bdat') %>%
    select(HHID, RSUBHH, PN, region=REGION20, rurality=BEALE2023_20) %>% # only the 2020 survey
    clean_names("all_caps") %>%
    filter(RURALITY %in% 1:3) %>%
    mutate(across(c(RURALITY, REGION), as_factor)) %>%
    mutate(across(RURALITY, ~recode(.x, '1'='Urban', '2'='Suburban', '3'='Rural'))) %>%
    drop_na() 
```
```{r}
#| label: load Housing data
hom <- read_sas('data/hrs/core-2020/h20h_h.sas7bdat') %>%
    select(
        HHID, RSUBHH, own_home=RH004,
        # home_val=RH020
    ) %>% # only the 2020 survey
    clean_names("all_caps") %>%
    mutate(OWNHOME_IND = ifelse(OWN_HOME == '1', 'Y', 'N')) %>%
    mutate(
        across(OWNHOME_IND, ~fct_relevel(as_factor(.x), "N", "Y")),
        # across(HOME_VAL, as.numeric)
        ) %>%
    filter(
        OWN_HOME %in% 1:7, # excluding don't know, refused, and missing
        # between(HOME_VAL, 0, 3000000000) 
    ) %>%
    drop_na() 
```

```{r}
#| label: merge will and rurality data
dd <- trk %>%
    inner_join(wil, by=c('HHID', 'PN')) %>%
    inner_join(rur, by=c('HHID', 'PN')) %>%
    inner_join(hom, by=c('HHID', 'RSUBHH')) %>%
    mutate(WGTMOD=(WGT20R / sum(WGT20R)) * n())
```

# Simple Visualization

```{r}
#| label: plot will ind by rurality
dd %>%
    # group_by(RURALITY, WILL_IND, REGION) %>%
    group_by(RURALITY, WILL_IND) %>%
    summarize(WGTSUM=sum(WGT20R)) %>%
    ggplot(aes(x=RURALITY, y=WGTSUM, fill=WILL_IND)) + 
    geom_bar(
        stat='identity', 
        # position=position_fill(reverse=TRUE), 
        position = 'fill'
    ) #+
    # facet_wrap(~REGION)
```

```{r}
#| label: plot will ind by age
dd %>%
    group_by(AGE, WILL_IND) %>%
    summarize(WGTSUM=sum(WGT20R)) %>% 
    group_by(AGE) %>%
    mutate(prop=WGTSUM/sum(WGTSUM)) %>% 
    filter(WILL_IND == 'Y') %>% 
    ggplot(aes(x=AGE, y=prop)) + 
    geom_point()
```
# Simple Analysis

```{r}
#| label: weighted logistic regression of will type on rurality
m0 <- glm(
    WILL_IND ~ RURALITY, data=dd, family=binomial, 
    weights=WGTMOD
) 
summary(m0)
```

```{r}
#| label: weighted logistic regression of will type on rurality
m1 <- glm(
    WILL_IND ~ AGE + RURALITY + RACE + HISP + OWNHOME_IND, 
    data=dd, family=binomial, 
    weight=WGTMOD
) 
summary(m1)
```