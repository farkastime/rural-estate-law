# Prerequisites
```{r}
#| label: load libraries
library(tidyverse)
library(haven)
library(survey)
library(srvyr)
```

# Data Compilation
```{r}
#| label: load the RAND Longitudinal File
rlf <- readRDS('/Users/tim/projects/rural-estate-law/data/hrs/rand-long-file.rds')
```

```{r, eval = FALSE}
# simple example of selecting columns by wave
waves <- c(14)
varnames = c('SPOUSE_ID', 'HHID')
vars <- waves %>%
    set_names(nm=paste0('HHID', waves)) %>%
    map(\(x) paste0('H', x, 'HHIDC')) 
rlf %>%
    select(!!!vars)
```

```{r}
# all columns by wave in nested list
waves <- c(14)
varlist <- list(
    SPOUSE_ID = list(prefix = 'S', suffix = 'HHIDPN'),
    HHID = list(prefix = 'H', suffix = 'HHIDC'), 
    INWAVE = list(prefix = 'INW', suffix = ''), 
    WGHT_R = list(prefix = 'R', suffix = 'WTRESP'), 
    WGHT_H = list(prefix = 'R', suffix = 'WTHH'),
    AGE = list(prefix = 'R', suffix = 'AGEY_E'), 
    VETERAN = list(prefix = 'S', suffix = 'VETRN'),
    MARRIED = list(prefix = 'R', suffix = 'MSTATH'),
    CHILDREN = list(prefix = 'H', suffix = 'CHILD'),
    REGION = list(prefix = 'R', suffix = 'CENREG'),
    RURAL = list(prefix = 'R', suffix = 'URBRUR'),
    HLTH_DIFF = list(prefix = 'R', suffix = 'HLTC3'),
    WEALTH = list(prefix = 'H', suffix = 'ATOTB')
)

vars <- c(map(varlist, \(x) map(waves, \(y) paste0(x$prefix, y, x$suffix))), recursive = TRUE)
names <- c(map(names(varlist), \(x) paste0(x, waves)), recursive = TRUE)
vars <- vars %>% set_names(names)

vars <- c(
    RESP_ID = 'HHIDPN', 
    STRATUM = 'RAESTRAT', # sampling stratum  
    SECU = 'RAEHSAMP', # sampling cluster (nested within stratum)  
    GENDER = 'RAGENDER', # gender: M/F
    RACE = 'RARACEM', # race: white, black, other
    HISPANIC = 'RAHISPAN', # hispanicity: Hispanic, not Hispanic
    EDUC_YRS = 'RAEDYRS', # years of education
    DEGREE = 'RAEDEGRM', # highest degree: none, GED, HS, HS/GED, AA, BA, MA/MBA, Law/MD/PhD, Other
    vars) # add non-wave specific vars

dd <- rlf %>%
    select(!!!vars)
```

```{r}
# pivot long
dd2 <- dd %>%
    pivot_longer(
        cols = c(starts_with(names(varlist))), 
        names_to = c('.value', 'WAVE'), 
        names_pattern = '(.*?)([0-9]{1,2})'
    ) %>%
    filter(INWAVE == 1) %>% select(!INWAVE) %>%
    group_by(RESP_ID) %>%
    mutate(
        across(WAVE, as.numeric),
        WAVEMAX = max(WAVE),
        WAVEMIN = min(WAVE)
    ) %>%
    filter(WAVE == WAVEMIN) %>%
    select(!c(WAVEMAX, WAVEMIN)) %>%
    ungroup()

```
```{r}
dd3 <- dd2 %>%
    mutate( # semantic recodes
        # anything not matches -> NA by default 
        across(GENDER, ~case_match(.x, 
            1 ~ 'Male', 
            2 ~ 'Female')),
        across(RACE, ~case_match(.x, 
            1 ~ 'White', 
            2 ~ 'Black', 
            3 ~ 'Other')), 
        across(HISPANIC, ~case_match(.x, 
            0 ~ 'Not Hispanic', 
            1 ~ 'Hispanic')), 
        across(VETERAN, ~case_match(.x, 
            0 ~ 'N', 
            1 ~ 'Y')), 
        across(REGION, ~case_match(.x, 
            1 ~ 'Northeast', 
            2 ~ 'Midwest', 
            3 ~ 'South', 
            4 ~ 'West', 
            5 ~ 'Other')), 
        across(RURAL, ~
            case_match(.x, 
                1 ~ 'Urban', 
                2 ~ 'Suburban', 
                3 ~ 'Rural') %>%
            fct_relevel('Rural', 'Suburban', 'Urban')), 
        across(HLTH_DIFF, ~case_match(.x, 
            1 ~ 'Better', 
            2 ~ 'Same', 
            3 ~ 'Worse')), 
        across(MARRIED, ~
            as.factor(.x) %>%
            fct_collapse( 
                'Married' = c('1', '2'), # married, married spouse absent
                'Unmarried' = c('4', '5', '6', '7', '8'))), # separated, divorced, separated/divorced, widowed, never married
        across(CHILDREN, ~
           ifelse(.x == 0, 'N', 'Y') %>%
           as.factor), 
        across(DEGREE, ~ .x %>%
            case_match(8 ~ NA, .default = .x) %>% # hacky (?) way to introduce NA for 8
            as.factor %>%
            fct_collapse(
                'None' = '0', # did not finish high school
                'High School' = c('1', '2', '3'), # high school or GED
                'College' = c('4', '5'), # Associates' or Bachelor's
                'Graduate' = c('6', '7'))), # MA/MBA/JD/MD/PhD
        across(WEALTH, round) # round wealth to nearest dollar
    ) %>%
    mutate( # type conversions
        across(c(RESP_ID, SPOUSE_ID), as.character),     
        across(c(WGHT_R, WGHT_H, AGE, EDUC_YRS), as.integer), # convert to integer
        across(c(STRATUM, SECU, GENDER, RACE, HISPANIC, VETERAN, REGION, RURAL), as_factor), # convert to factor
        across(SPOUSE_ID, ~na_if(.x, '0')) # NAs for respondants with no spouse
    ) 
```

```{r}
#| label: load the Wills data
wil <- read_sas('data/hrs/core-2018/h18t_r.sas7bdat') %>%
    select(HHID, PN, WILL_TYPE=QT001) %>%
    mutate(
        RESP_ID = paste0(HHID, PN),
        # across(WILL_TYPE, ~ifelse(.x %in% c('-8', '8', '9'), NA, .x)),
        across(WILL_TYPE, ~case_match(.x, 
            1 ~ 'Will', 
            2 ~ 'Both', 
            3 ~ 'Trust', 
            5 ~ 'Neither', 
            # .default = NA_character_
            )),
        across(WILL_TYPE, as.factor),
        WILL_IND = fct_collapse(WILL_TYPE, 
            Y = c('Will', 'Both', 'Trust'), 
            N = c('Neither')), 
        across(WILL_IND, ~fct_relevel(as_factor(.x), 'N', 'Y'))
        ) %>%
    select(RESP_ID, WILL_TYPE, WILL_IND) 
 ```


```{r}
#| label: load the home ownership data
hom <- read_sas('data/hrs/core-2018/h18h_h.sas7bdat') %>%
    select(
        HHID_WOSUB=HHID, QSUBHH, OWN_HOME=QH004,
    ) %>% # only the 2020 survey
    mutate(
        across(OWN_HOME, ~ case_match(.x, 
                1 ~ 'Y', 
                c(2, 3) ~ 'N') %>%
            as.factor), 
        HHID = paste0(HHID_WOSUB, QSUBHH)
    ) %>%
    select(HHID, OWN_HOME)
```
```{r}
#merge
dd <- dd3 %>%
    left_join(wil, by='RESP_ID') %>%
    left_join(hom, by='HHID')
saveRDS(dd, '/Users/tim/projects/rural-estate-law/data/hrs/rand-long-file-merged-2018.rds')
```

# Exploratory Data Analysis

```{r}
#| label: load the merged data
dd <- readRDS('/Users/tim/projects/rural-estate-law/data/hrs/rand-long-file-merged-2018.rds') 
```


```{r}
#| label: summary statistics
dd_srvy <- as_survey(dd, strata = STRATUM, weights = WGHT_R, id = SECU, nest = TRUE)
dd_srvy %>%
    filter(!is.na(WILL_IND)) %>%
    filter(!is.na(RURAL)) %>%
    group_by(REGION, RURAL, WILL_IND) %>%
    summarize(prop = survey_prop()) %>% 
    filter(WILL_IND == 'Y') %>% 
    select(-WILL_IND) %>% view
```

```{r}
# logistic regression models
dd_mod <- dd %>%
    mutate(across(WILL_IND, ~as.integer(case_match(as.character(.x), 'N' ~ 0, 'Y' ~ 1))))
dd_srvy_mod <- as_survey(dd_mod, strata = STRATUM, weights = WGHT_R, id = SECU, nest = TRUE)
mod1 <- svyglm(WILL_IND ~ 
    RURAL * 
    WEALTH + 
    RURAL * 
    RACE + 
    RURAL * 
    AGE + 
    RURAL * 
    HISPANIC + 
    RURAL * 
    MARRIED + 
    GENDER + 
    RURAL * 
    DEGREE +  
    HLTH_DIFF + 
    RURAL * 
    CHILDREN +  
    RURAL * 
    OWN_HOME,
    # VETERAN,
    design = dd_srvy_mod,  #TODO: drop_na appears to influence results. why?
    family = 'binomial', 
    # subset = REGION == 'Midwest'
    ) 
summary(mod1)

mod2 <- svyglm(WILL_IND ~ RURAL + WEALTH + DEGREE, 
    design = dd_srvy_mod,  #TODO: drop_na appears to influence results. why?
    family = 'binomial', 
)
summary(mod2)
```